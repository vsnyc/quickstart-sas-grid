{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a SAS Grid and Lustre infrastructure into an existing VPC. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1nh8kis2a)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "SAS Grid license information"
                    },
                    "Parameters": [
                        "SASSoftwareDepot",
                        "SASSoftwareDepotName",
                        "SASPlanFiles",
                        "SASLicenseMeta",
                        "SASLicenseApp"
                    ]
                },
                {
                    "Label": {
                        "default": "Network configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "PrivateSubnet1ID",
                        "PrivateSubnet2ID",
                        "PrivateSubnet3ID",
                        "PublicSubnet1ID",
                        "VPCCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Linux bastion configuration"
                    },
                    "Parameters": [
                        "AdminPassword",
                        "AdminIngressLocation",
                        "DomainDNSName",
                        "RDGWSG"
                    ]
                },
                {
                    "Label": {
                        "default": "Storage Stack:"
                    },
                    "Parameters": [
                        "StorageStack",
                        "StorageNodeCount",
                        "StorageEBSVolumeType",
                        "StorageEBSVolumeSize"
                    ]
                },
                {
                    "Label": {
                        "default": "Personal Configuration:"
                    },
                    "Parameters": [
                        "OperatorEmail",
                        "StorageKeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "License Information:"
                    },
                    "Parameters": [
                        "LicenseAgreementTerms"
                    ]
                },
                {
                    "Label": {
                        "default": "Lustre EC2 Configuration"
                    },
                    "Parameters": [
                        "NumberOfOSSNodes",
                        "LustreOSSEBSVolumeSize"
                    ]
                },
                {
                    "Label": {
                        "default": "SAS Grid EC2 configuration"
                    },
                    "Parameters": [
                        "SASGridInstanceType",
                        "NoOfSASGridInstances",
                        "SASGridKeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "StorageStack": {
                    "default": "Select the Storage Stack"
                },
                "SASSoftwareDepot": {
                    "default": "SAS Software Depot tar file in S3"
                },
                "SASSoftwareDepotName": {
                    "default": "SAS Software Depot name"
                },
                "SASPlanFiles": {
                    "default": "SAS plan files folder in S3"
                },
                "SASLicenseMeta": {
                    "default": "SAS Metadata Server license file"
                },
                "SASLicenseApp": {
                    "default": "SAS Application Server license file"
                },
                "VPCID": {
                    "default": "VPC ID"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "PrivateSubnet1ID": {
                    "default": "Private subnet 1 ID"
                },
                "PrivateSubnet2ID": {
                    "default": "Private subnet 2 ID"
                },
                "PublicSubnet1ID": {
                    "default": "Public subnet 1 ID"
                },
                "PrivateSubnet3ID": {
                    "default": "Private Subnet 3 ID"
                },
                "DomainDNSName": {
                    "default": "Domain DNS name"
                },
                "RDGWSG": {
                    "default": "RDGW security group ID"
                },
                "StorageKeyPairName": {
                    "default": "Storage KeyPair Name"
                },
                "LustreOSSEBSVolumeSize": {
                    "default": "EBS volume size for Lustre OSS"
                },
                "NumberOfOSSNodes": {
                    "default": "Number of Lustre OSS nodes"
                },
                "SASGridKeyPairName": {
                    "default": "SAS Grid key pair name"
                },
                "SASGridInstanceType": {
                    "default": "Instance type for SAS Grid instances"
                },
                "NoOfSASGridInstances": {
                    "default": "Required number of SAS Grid instances"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 key prefix"
                },
                "StorageEBSVolumeType": {
                    "default": "EBS Volumes type for Storage Instances"
                },
                "LicenseAgreementTerms": {
                    "default": "License Agreement Terms"
                },
                "StorageNodeCount": {
                    "default": "Server Node Configurations: Server Node Count"
                },
                "OperatorEmail": {
                    "default": "Operator Email"
                },
                "StorageEBSVolumeSize": {
                    "default": "Storage Disk size for each node"
                }
            }
        }
    },
    "Parameters": {
        "StorageStack": {
            "Description": "Select Storage Stack",
            "Type": "String",
            "AllowedValues": [
                "Lustre",
                "GPFS"
            ]
        },
        "SASSoftwareDepot": {
            "AllowedPattern": "^([-a-zA-Z0-9@:%_\\+.~#?&//=]*)$",
            "ConstraintDescription": "Must be a tar file in a valid S3 location, e.g. mysasbucket/sasorders",
            "Description": "S3 folder location of the Software Depot tar file.",
            "Type": "String"
        },
        "SASSoftwareDepotName": {
            "AllowedPattern": "^[0-9a-zA-Z-_/]*$",
            "ConstraintDescription": "Name of SAS Software Depot minus .tar, e.g. SASSoftwareDepot_Final.",
            "Description": "Name of the Software Depot tar file without the .tar extension.",
            "Type": "String"
        },
        "SASPlanFiles": {
            "AllowedPattern": "^([-a-zA-Z0-9@:%_\\+.~#?&//=]*)$",
            "ConstraintDescription": "must be a folder of planfiles in S3 location, e.g. mysasbucket/sasplanfiles/",
            "Description": "S3 location of the folder with the SAS Plan files",
            "Type": "String"
        },
        "SASLicenseMeta": {
            "AllowedPattern": "^([-a-zA-Z0-9@:%_\\+.~#?&//=]*)$",
            "ConstraintDescription": "must be file name containing the SAS Metadata license such as SAS94_9C1TDT_70243248_LINUX_X86-64.txt",
            "Description": "Name of SAS Metadata License file",
            "Type": "String"
        },
        "SASLicenseApp": {
            "AllowedPattern": "^([-a-zA-Z0-9@:%_\\+.~#?&//=]*)$",
            "ConstraintDescription": "must be file name containing the SAS Application Server license such as SAS94_9C1TDT_70243248_LINUX_X86-64.txt",
            "Description": "Name of SAS Application Server License file",
            "Type": "String"
        },
        "StorageKeyPairName": {
            "Description": "Name of an existing EC2 Key Pair.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "MinLength": "1",
            "ConstraintDescription": "Must be the name of an existing EC2 key pair."
        },
        "DomainDNSName": {
            "AllowedPattern": "[a-zA-Z0-9]+\\..+",
            "Description": "Fully qualified domain name (FQDN) of the forest root domain, e.g. example.com.",
            "Default": "example.com",
            "MaxLength": "25",
            "MinLength": "3",
            "Type": "String"
        },
        "RDGWSG": {
            "Description": "ID of the RD Gateway security group (e.g., sg-0343606e).",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "SASGridKeyPairName": {
            "Description": "A public/private key pair, which allows you to securely connect to your instance after it launches.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "SASGridInstanceType": {
            "Description": "The EC2 instance type for SAS Grid instances.",
            "Type": "String",
            "Default": "i3.8xlarge",
            "AllowedValues": [
                "i3.4xlarge",
                "i3.8xlarge"
            ]
        },
        "NoOfSASGridInstances": {
            "Description": "The number of SAS Grid instances that are required (2-20).",
            "Type": "Number",
            "Default": "2",
            "AllowedValues": [
                "2",
                "4",
                "6",
                "8",
                "10",
                "12",
                "14",
                "16",
                "18",
                "20"
            ]
        },
        "LustreOSSEBSVolumeSize": {
            "Description": "EBS volume size (in GiB) for Lustre OSS nodes. You can specify 100-9900 GiB. Provide the size (in GiB) for Lustre OSS data volume in multiples of 100. Volume size for each OSS node will be assigned based on the input provided here.",
            "Type": "String",
            "MinLength": "3",
            "MaxLength": "5",
            "Default": "100"
        },
        "NumberOfOSSNodes": {
            "Description": "The number of Lustre OSS node instances that are required (3-15).",
            "Type": "Number",
            "Default": "3",
            "AllowedValues": [
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "13",
                "14",
                "15"
            ]
        },
        "PrivateSubnet1ID": {
            "Description": "Select the subnet ID of private subnet 1 located in Availability Zone 1.",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2ID": {
            "Description": "Select the subnet ID of private subnet 2 located in Availability Zone 1.",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet3ID": {
            "Description": "Select the Subnet ID of a private subnet 3 located in Availability Zone 2.",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet1ID": {
            "Description": "Select the subnet ID of public subnet 1 located in Availability Zone 1.",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-sas-grid/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "StorageEBSVolumeType": {
            "Description": "EBS volume type for storage instances",
            "Type": "String",
            "Default": "gp2",
            "AllowedValues": [
                "gp2",
                "io1",
                "sc1",
                "st1",
                "standard"
            ]
        },
        "VPCID": {
            "Description": "The ID of an existing VPC.",
            "Type": "AWS::EC2::VPC::Id"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        },
        "AdminIngressLocation": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-32",
            "Description": "Allowed CIDR block for external access to the Linux bastion host.",
            "Type": "String"
        },
        "AdminPassword": {
            "Description": "Password for the administrative account. Must be at least 8 characters containing letters, numbers and symbols.",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "32",
            "NoEcho": "true"
        },
        "LicenseAgreementTerms": {
            "AllowedValues": [
                "Accept"
            ],
            "Description": "Review the licensing terms at http://spectrumscale-license.s3-website-us-west-2.amazonaws.com and choose Accept to indicate your acceptance.",
            "Type": "String"
        },
        "StorageEBSVolumeSize": {
            "Description": "Supported disk size are MIN=100 and MAX=16384(GB)",
            "Type": "Number",
            "Default": "500",
            "MinValue": "100",
            "MaxValue": "16384",
            "ConstraintDescription": "Allowed Disk size are MIN=10,MAX=16384 (GB)."
        },
        "StorageNodeCount": {
            "Description": "Number of EC2 instances to launch for NSD Server on GPFS cluster (MIN=2, MAX=64).",
            "Type": "Number",
            "Default": "2",
            "AllowedValues": [
                "2",
                "4",
                "6",
                "8",
                "10",
                "12",
                "14",
                "16",
                "18",
                "20",
                "22",
                "24",
                "26",
                "28",
                "30",
                "32",
                "34",
                "36",
                "38",
                "40",
                "42",
                "44",
                "46",
                "48",
                "50",
                "52",
                "54",
                "56",
                "58",
                "60",
                "62",
                "64"
            ],
            "ConstraintDescription": "NSD Server node size must be less then or equal to 64."
        },
        "OperatorEmail": {
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "Description": "Email address that notifications of any scaling operations will be sent to.",
            "MinLength": "1",
            "Type": "String",
            "ConstraintDescription": "Must be a valid email address."
        }
    },
    "Conditions": {
        "RunLustreStack": {
            "Fn::Equals": [
                {
                    "Ref": "StorageStack"
                },
                "Lustre"
            ]
        },
        "RunGPFSStack": {
            "Fn::Equals": [
                {
                    "Ref": "StorageStack"
                },
                "GPFS"
            ]
        },
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        }
    },
    "Rules": {
        "LustreSupportedRegionRule": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Contains": [
                            [
                                "ap-southeast-2",
                                "us-east-2",
                                "us-east-1",
                                "us-west-1",
                                "us-west-2",
                                "ap-northeast-1",
                                "ap-northeast-2",
                                "ap-south-1",
                                "ap-southeast-1",
                                "ap-southeast-2",
                                "ca-central-1",
                                "eu-central-1",
                                "eu-west-1",
                                "eu-west-2",
                                "eu-west-3"
                            ],
                            {
                                "Ref": "AWS::Region"
                            }
                        ]
                    },
                    "AssertDescription": "This Quick Start utilizes Lustre which is only available in the US West (Oregon), US West (N. California), US East (Ohio), US East (N. Virginia), Asia Pacific (Mumbai), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), Canada (Central), EU (Frankfurt), EU (Ireland), EU (London) and EU (Paris) regions. Please launch the stack in one of these regions to continue."
                }
            ]
        }
    },
    "Resources": {
        "AnsiblePublicKey": {
            "Type": "AWS::SSM::Parameter",
            "Properties": {
                "Name": {
                    "Fn::Sub": "sas-grid-ansiblekey-${AWS::StackName}"
                },
                "Description": {
                    "Fn::Sub": "sas-grid-ansiblekey-${AWS::StackName}"
                },
                "Type": "String",
                "Value": "dummy"
            }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "EC2Policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:RunInstances",
                                        "ec2:Describe*",
                                        "ec2:TerminateInstances",
                                        "ec2:RebootInstances",
                                        "ec2:*NetworkInterface*"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:PassRole",
                                        "iam:ListAttachedRolePolicies",
                                        "iam:AttachRolePolicy"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            },
            "Condition": "RunGPFSStack"
        },
        "DivideEBSVolumeSize": {
            "Type": "Custom::Add",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "DivideFunction",
                        "Arn"
                    ]
                },
                "Op1": {
                    "Ref": "StorageEBSVolumeSize"
                },
                "Op2": {
                    "Fn::FindInMap": [
                        "Parameters",
                        "GPFS",
                        "DiskPerNode"
                    ]
                }
            },
            "Condition": "RunGPFSStack"
        },
        "DivideFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": {
                        "Fn::Sub": "var response = require('cfn-response');\nexports.handler = function(event, context) {\n  var result = parseInt(event.ResourceProperties.Op1) / parseInt(event.ResourceProperties.Op2);\n result = Math.round(result);\n response.send(event, context, response.SUCCESS, {Value: result});\n};\n"
                    }
                },
                "Runtime": "nodejs8.10"
            },
            "Condition": "RunGPFSStack"
        },
        "LustreStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/lustre.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "PrivateSubnet1ID": {
                        "Ref": "PrivateSubnet1ID"
                    },
                    "PrivateSubnet2ID": {
                        "Ref": "PrivateSubnet2ID"
                    },
                    "NumberOfOSSNodes": {
                        "Ref": "NumberOfOSSNodes"
                    },
                    "DomainDNSName": {
                        "Ref": "DomainDNSName"
                    },
                    "LustreOSSEBSVolumeSize": {
                        "Ref": "LustreOSSEBSVolumeSize"
                    },
                    "LustreKeyPairName": {
                        "Ref": "StorageKeyPairName"
                    },
                    "VPCID": {
                        "Ref": "VPCID"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "RDGWSG": {
                        "Ref": "RDGWSG"
                    },
                    "LustreEBSVolumeType": {
                        "Ref": "StorageEBSVolumeType"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "SASSoftwareDepot": {
                        "Ref": "SASSoftwareDepot"
                    }
                }
            },
            "Condition": "RunLustreStack"
        },
        "GPFSStack": {
            "Condition": "RunGPFSStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-ibm-spectrum-scale/templates/ibm-spectrum-scale.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "LicenseAgreementTerms": {
                        "Ref": "LicenseAgreementTerms"
                    },
                    "BastionSecurityGroupID": {
                        "Ref": "RDGWSG"
                    },
                    "BlockSize": {
                        "Fn::FindInMap": [
                            "Parameters",
                            "GPFS",
                            "BlockSize"
                        ]
                    },
                    "DataReplica": {
                        "Fn::FindInMap": [
                            "Parameters",
                            "GPFS",
                            "DataReplica"
                        ]
                    },
                    "GpfsMountPoint": {
                        "Fn::FindInMap": [
                            "Parameters",
                            "GPFS",
                            "GpfsMountPoint"
                        ]
                    },
                    "EBSType": {
                        "Ref": "StorageEBSVolumeType"
                    },
                    "DiskPerNode": {
                        "Fn::FindInMap": [
                            "Parameters",
                            "GPFS",
                            "DiskPerNode"
                        ]
                    },
                    "DiskSize": {
                        "Fn::GetAtt": [
                            "DivideEBSVolumeSize",
                            "Value"
                        ]
                    },
                    "ServerNodeCount": {
                        "Ref": "StorageNodeCount"
                    },
                    "ServerInstanceType": {
                        "Fn::FindInMap": [
                            "Parameters",
                            "GPFS",
                            "ServerInstanceType"
                        ]
                    },
                    "ComputeNodeCount": {
                        "Fn::FindInMap": [
                            "Parameters",
                            "GPFS",
                            "ComputeNodeCount"
                        ]
                    },
                    "ComputeInstanceType": {
                        "Fn::FindInMap": [
                            "Parameters",
                            "GPFS",
                            "ComputeInstanceType"
                        ]
                    },
                    "VpcId": {
                        "Ref": "VPCID"
                    },
                    "PrivateSubnet1ID": {
                        "Ref": "PrivateSubnet1ID"
                    },
                    "PrivateSubnet2ID": {
                        "Ref": "PrivateSubnet3ID"
                    },
                    "KeyPairName": {
                        "Ref": "StorageKeyPairName"
                    },
                    "OperatorEmail": {
                        "Ref": "OperatorEmail"
                    }
                }
            },
            "DependsOn": [
                "DivideEBSVolumeSize"
            ]
        },
        "SASGridStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/sas-nodes.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "SASSoftwareDepot": {
                        "Ref": "SASSoftwareDepot"
                    },
                    "SASSoftwareDepotName": {
                        "Ref": "SASSoftwareDepotName"
                    },
                    "SASPlanFiles": {
                        "Ref": "SASPlanFiles"
                    },
                    "SASLicenseMeta": {
                        "Ref": "SASLicenseMeta"
                    },
                    "SASLicenseApp": {
                        "Ref": "SASLicenseApp"
                    },
                    "SASGridInstanceType": {
                        "Ref": "SASGridInstanceType"
                    },
                    "NoOfSASGridInstances": {
                        "Ref": "NoOfSASGridInstances"
                    },
                    "SASGridKeyPairName": {
                        "Ref": "SASGridKeyPairName"
                    },
                    "PrivateSubnet1ID": {
                        "Ref": "PrivateSubnet1ID"
                    },
                    "VPCID": {
                        "Ref": "VPCID"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "DomainDNSName": {
                        "Ref": "DomainDNSName"
                    },
                    "LustreMGTNodeIP": {
                        "Fn::GetAtt": [
                            "LustreStack",
                            "Outputs.LustreMGTNodeIP"
                        ]
                    },
                    "SASGridSG": {
                        "Fn::GetAtt": [
                            "LustreStack",
                            "Outputs.SASGridSGID"
                        ]
                    },
                    "DynamoDBInstanceProfileName": {
                        "Fn::GetAtt": [
                            "LustreStack",
                            "Outputs.DynamoDBInstanceProfileName"
                        ]
                    },
                    "DynamoDBTableName": {
                        "Fn::GetAtt": [
                            "LustreStack",
                            "Outputs.DynamoDBTableName"
                        ]
                    }
                }
            },
            "DependsOn": [
                "LustreStack"
            ],
            "Condition": "RunLustreStack"
        },
        "LinuxBastionStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/linux-bastion.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "SASSoftwareDepot": {
                        "Ref": "SASSoftwareDepot"
                    },
                    "SASSoftwareDepotName": {
                        "Ref": "SASSoftwareDepotName"
                    },
                    "SASPlanFiles": {
                        "Ref": "SASPlanFiles"
                    },
                    "SASLicenseMeta": {
                        "Ref": "SASLicenseMeta"
                    },
                    "SASLicenseApp": {
                        "Ref": "SASLicenseApp"
                    },
                    "SASGridKeyPairName": {
                        "Ref": "SASGridKeyPairName"
                    },
                    "LustreKeyPairName": {
                        "Ref": "StorageKeyPairName"
                    },
                    "KeyPairName": {
                        "Ref": "SASGridKeyPairName"
                    },
                    "NumberOfOSSNodes": {
                        "Ref": "NumberOfOSSNodes"
                    },
                    "DomainDNSName": {
                        "Ref": "DomainDNSName"
                    },
                    "PublicSubnetID": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "VPCID": {
                        "Ref": "VPCID"
                    },
                    "AdminIngressLocation": {
                        "Ref": "AdminIngressLocation"
                    },
                    "RDGWSecurityGroup": {
                        "Ref": "RDGWSG"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "AdminPassword": {
                        "Ref": "AdminPassword"
                    },
                    "StorageStack": {
                        "Ref": "StorageStack"
                    }
                }
            }
        },
        "GPFSSASGrid": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/sas-nodes-gpfs.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "SASSoftwareDepot": {
                        "Ref": "SASSoftwareDepot"
                    },
                    "SASSoftwareDepotName": {
                        "Ref": "SASSoftwareDepotName"
                    },
                    "SASPlanFiles": {
                        "Ref": "SASPlanFiles"
                    },
                    "SASLicenseMeta": {
                        "Ref": "SASLicenseMeta"
                    },
                    "SASLicenseApp": {
                        "Ref": "SASLicenseApp"
                    },
                    "SASGridInstanceType": {
                        "Ref": "SASGridInstanceType"
                    },
                    "NoOfSASGridInstances": {
                        "Ref": "NoOfSASGridInstances"
                    },
                    "SASGridKeyPairName": {
                        "Ref": "SASGridKeyPairName"
                    },
                    "PrivateSubnet1ID": {
                        "Ref": "PrivateSubnet1ID"
                    },
                    "VPCID": {
                        "Ref": "VPCID"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "DomainDNSName": {
                        "Ref": "DomainDNSName"
                    },
                    "GpfsMountPoint": {
                        "Fn::FindInMap": [
                            "Parameters",
                            "GPFS",
                            "GpfsMountPoint"
                        ]
                    }
                }
            },
            "Condition": "RunGPFSStack"
        }
    },
    "Mappings": {
        "Parameters": {
            "GPFS": {
                "BlockSize": "256K",
                "DataReplica": "2",
                "GpfsMountPoint": "/gpfs/sasgrid",
                "ServerInstanceType": "r4.8xlarge",
                "ComputeInstanceType": "t2.small",
                "ComputeNodeCount": "1",
                "DiskPerNode": "10"
            }
        }
    }
}